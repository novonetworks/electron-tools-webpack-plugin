{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["import webpack, { Plugin, Compiler } from 'webpack'\nimport { build } from 'electron-builder'\nimport spawn from 'cross-spawn'\n\ninterface Options {\n    readonly main: string\n    readonly args?: string[]\n    readonly isDebug?: boolean\n}\n\nconst isDevelopment = process.env.NODE_ENV === 'development'\n\n// noinspection JSUnusedGlobalSymbols\nexport default class ElectronToolsWebpackPlugin implements Plugin {\n    private compiler: Compiler\n    private config: any = {}\n    private eProcess: any\n\n    constructor(options: Options) {\n        Object.assign(this.config, options)\n        this.log(`constructor: ${{ options }}`)\n    }\n\n    public apply(compiler: Compiler): void {\n        this.log(`apply: ${{ compiler }}`)\n        this.compiler = compiler\n        if (isDevelopment) {\n            this.afterEmit()\n        } else {\n            this.done()\n        }\n    }\n    private afterEmit(): void {\n        this.log('afterEmit')\n        this.compiler.hooks.afterEmit.tap(\n            ElectronToolsWebpackPlugin.name,\n            this.startElectron,\n        )\n    }\n    private done(): void {\n        this.log('done')\n        this.compiler.hooks.afterEmit.tap(\n            ElectronToolsWebpackPlugin.name,\n            this.buildElectron,\n        )\n    }\n\n    private startElectron = (compilation: webpack.compilation.Compilation) => {\n        this.log('startElectron')\n        if (!this.config.main || this.eProcess) {\n            return\n        }\n        const existsAt = compilation.assets[this.config.main].existsAt\n        const args = this.config.args\n            ? [existsAt].concat(this.config.args)\n            : [existsAt]\n        this.eProcess = spawn('electron', args, {\n            env: process.env,\n            stdio: 'inherit',\n        })\n\n        const disposable = this.eProcess.on(\n            'close',\n            (code: number, signal: string): void => {\n                this.log(`code: ${code}, signal: ${signal}`)\n                disposable()\n                process.kill(process.pid, signal)\n            },\n        )\n\n        /*\n        once(event: \"close\", listener: (code: number, signal: string) => void): this;\n        once(event: \"disconnect\", listener: () => void): this;\n        once(event: \"error\", listener: (err: Error) => void): this;\n        once(event: \"exit\", listener: (code: number | null, signal: string | null) => void): this;\n        once(event: \"message\", listener: (message: any, sendHandle: net.Socket | net.Server) => void): this;\n         */\n\n        this.eProcess.on('close', (): void => {\n            this.log('close')\n        })\n\n        this.eProcess.on('disconnect', (): void => {\n            this.log('disconnect')\n        })\n\n        this.eProcess.on('error', (): void => {\n            this.log('error')\n        })\n\n        this.eProcess.on('exit', (): void => {\n            this.log('exit')\n        })\n\n        this.eProcess.on('message', (): void => {\n            this.log('message')\n        })\n    }\n\n    private buildElectron = async () => {\n        this.log('buildElectron')\n        await build()\n    }\n\n    private log = (message?: any, ...optionalParams: any[]): void => {\n        this.config.isDebug && console.log(message, optionalParams)\n    }\n}\n"],"names":[],"mappings":"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"}